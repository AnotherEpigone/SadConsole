<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SadConsole.Host.MonoGame</name>
    </assembly>
    <members>
        <member name="P:SadConsole.Game.MonoGameInstance">
            <summary>
            The <see cref="T:Microsoft.Xna.Framework.Game"/> instance.
            </summary>
        </member>
        <member name="M:SadConsole.Game.OpenStream(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Opens a read-only stream with MonoGame.
            </summary>
            <param name="file">The file to open.</param>
            <param name="mode">Unused by monogame.</param>
            <param name="access">Unused by monogame.</param>
            <returns>The stream.</returns>
        </member>
        <member name="M:SadConsole.Game.ToggleFullScreen">
            <summary>
            Toggles between windowed and fullscreen rendering for SadConsole.
            </summary>
        </member>
        <member name="M:SadConsole.Game.ResizeWindow(System.Int32,System.Int32)">
            <summary>
            Resizes the game window.
            </summary>
            <param name="width">The width of the window in pixels.</param>
            <param name="height">The height of the window in pixels.</param>
        </member>
        <member name="T:SadConsole.MonoGame.Game">
            <summary>
            A MonoGame <see cref="T:Microsoft.Xna.Framework.Game"/> instance that runs SadConsole.
            </summary>
        </member>
        <member name="T:SadConsole.MonoGame.Game.FPSCounterComponent">
            <summary>
            A component to draw how many frames per second the engine is performing at.
            </summary>
        </member>
        <member name="P:SadConsole.MonoGame.Game.WindowWidth">
            <summary>
            The current game window width.
            </summary>
        </member>
        <member name="P:SadConsole.MonoGame.Game.WindowHeight">
            <summary>
            The current game window height.
            </summary>
        </member>
        <member name="E:SadConsole.MonoGame.Game.WindowResized">
            <summary>
            Raised when the window is resized and the render area has been calculated.
            </summary>
        </member>
        <member name="M:SadConsole.MonoGame.Game.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.MonoGame.Game.ResizeGraphicsDeviceManager(Microsoft.Xna.Framework.Point,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Resizes the <see cref="P:SadConsole.MonoGame.Global.GraphicsDeviceManager"/> by the specified font size.
            </summary>
            <param name="fontSize">The size of the font to base the final values on.</param>
            <param name="width">The width glyphs.</param>
            <param name="height">The height glyphs.</param>
            <param name="additionalWidth">Additional pixel width to add to the resize.</param>
            <param name="additionalHeight">Additional pixel height to add to the resize.</param>
        </member>
        <member name="M:SadConsole.MonoGame.Game.ResetRendering">
            <summary>
            Resets the <see cref="P:SadConsole.MonoGame.Global.RenderOutput"/> target and determines the appropriate <see cref="P:SadConsole.Settings.Rendering.RenderRect"/> and <see cref="P:SadConsole.Settings.Rendering.RenderScale"/> based on the window or fullscreen state.
            </summary>
        </member>
        <member name="P:SadConsole.MonoGame.Settings.UseHardwareFullScreen">
            <summary>
            Tells MonoGame to use a full screen resolution change instead of soft (quick) full screen. Must be set before the game is created.
            </summary>
        </member>
        <member name="T:SadConsole.Renderers.ConsoleRenderer">
             <summary>
             Draws a <see cref="T:SadConsole.Console"/>.
             </summary>
             <remarks>
             This renderer only caches drawing of the surface's cells. When the <see cref="!:Render(IScreenSurface)"/> method is called, the cached surface is drawn, then the cursor (if required), and then a tint. This allows the cursor to move and animate on the surface without the entire surface being redrawn each frame.
            
             If the cursor is not visible, and there is not tint set, this renderer behaves exactly like <see cref="T:SadConsole.Renderers.ScreenObjectRenderer"/>.
             </remarks>
        </member>
        <member name="M:SadConsole.Renderers.ConsoleRenderer.Attach(SadConsole.ISurfaceRenderData)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ConsoleRenderer.Render(SadConsole.ISurfaceRenderData)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ConsoleRenderer.Refresh(SadConsole.ISurfaceRenderData,System.Boolean)">
             <inheritdoc/>
        </member>
        <member name="T:SadConsole.Renderers.ControlsConsole">
             <summary>
             Draws a <see cref="T:SadConsole.Renderers.ControlsConsole"/>.
             </summary>
             <remarks>
             This renderer only caches drawing of the surface's cells. When the <see cref="!:Render(IScreenSurface)"/> method is called, the cached surface is drawn, then the cursor (if required), and then a tint. This allows the cursor to move and animate on the surface without the entire surface being redrawn each frame.
            
             If the cursor is not visible, and there is not tint set, this renderer behaves exactly like <see cref="T:SadConsole.Renderers.ScreenObjectRenderer"/>.
             </remarks>
        </member>
        <member name="M:SadConsole.Renderers.ControlsConsole.Attach(SadConsole.ISurfaceRenderData)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ControlsConsole.Render(SadConsole.ISurfaceRenderData)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ControlsConsole.Refresh(SadConsole.ISurfaceRenderData,System.Boolean)">
             <inheritdoc/>
        </member>
        <member name="T:SadConsole.Renderers.LayeredScreenObject">
            <summary>
            Draws a <see cref="T:SadConsole.IScreenSurface"/> when it uses a <see cref="T:SadConsole.LayeredScreenSurface"/> type for the <see cref="!:IScreenSurface.Surface"/>.
            </summary>
            <remarks>
            This renderer caches the entire drawing of the surface's cells, including the tint of the object.
            </remarks>
        </member>
        <member name="M:SadConsole.Renderers.LayeredScreenObject.Attach(SadConsole.ISurfaceRenderData)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.LayeredScreenObject.Refresh(SadConsole.ISurfaceRenderData,System.Boolean)">
             <inheritdoc/>
        </member>
        <member name="T:SadConsole.Renderers.ScreenObjectRenderer">
            <summary>
            Draws a <see cref="T:SadConsole.IScreenSurface"/>.
            </summary>
            <remarks>
            This renderer caches the entire drawing of the surface's cells, including the tint of the object.
            </remarks>
        </member>
        <member name="M:SadConsole.Renderers.ScreenObjectRenderer.Attach(SadConsole.ISurfaceRenderData)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ScreenObjectRenderer.Detatch(SadConsole.ISurfaceRenderData)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ScreenObjectRenderer.Render(SadConsole.ISurfaceRenderData)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ScreenObjectRenderer.Refresh(SadConsole.ISurfaceRenderData,System.Boolean)">
             <inheritdoc/>
        </member>
        <member name="T:SadConsole.Renderers.Window">
             <summary>
             Draws a <see cref="T:SadConsole.Renderers.Window"/>.
             </summary>
             <remarks>
             This renderer only caches drawing of the surface's cells. When the <see cref="!:Render(IScreenSurface)"/> method is called, the cached surface is drawn, then the cursor (if required), and then a tint. This allows the cursor to move and animate on the surface without the entire surface being redrawn each frame.
            
             If the cursor is not visible, and there is not tint set, this renderer behaves exactly like <see cref="T:SadConsole.Renderers.ScreenObjectRenderer"/>.
             </remarks>
        </member>
        <member name="M:SadConsole.Renderers.Window.Attach(SadConsole.ISurfaceRenderData)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.Window.Render(SadConsole.ISurfaceRenderData)">
             <inheritdoc/>
        </member>
        <member name="T:SadConsole.Readers.TextureToSurfaceReader">
            <summary>
            Reads a texture to a cached surface. Used for animation.
            </summary>
        </member>
        <member name="P:SadConsole.Readers.TextureToSurfaceReader.UseBlockMode">
            <summary>
            Renders the cells as blocks instead of characters.
            </summary>
        </member>
        <member name="M:SadConsole.Readers.TextureToSurfaceReader.#ctor(System.Int32,System.Int32,SadConsole.Font,SadRogue.Primitives.Point)">
            <summary>
            Creates a new instance of the class.
            </summary>
            <param name="pixelWidth">Width the source texture.</param>
            <param name="pixelHeight">Height of the source texture.</param>
            <param name="font">Font used for rendering.</param>
        </member>
        <member name="M:SadConsole.Readers.TextureToSurfaceReader.GetSurface(Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Returns a surface with the specified image rendered to it as characters.
            </summary>
            <param name="image">The image to render.</param>
            <returns>The surface.</returns>
        </member>
    </members>
</doc>
