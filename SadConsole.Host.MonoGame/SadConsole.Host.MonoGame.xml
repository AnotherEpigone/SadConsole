<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SadConsole.Host.MonoGame</name>
    </assembly>
    <members>
        <member name="T:SadConsole.Components.DrawImage">
            <summary>
            Draws an image on top of a console.
            </summary>
        </member>
        <member name="P:SadConsole.Components.DrawImage.PositionMode">
            <summary>
            Sets or gets how the <see cref="P:SadConsole.Components.DrawImage.PositionOffset"/> property is interpreted.
            </summary>
        </member>
        <member name="P:SadConsole.Components.DrawImage.PositionOffset">
            <summary>
            The positioning offset.
            </summary>
            <remarks>
            The position the image is displayed is based on the hosting console's position. This property adjusts the position of the image by the specified amount.
            </remarks>
        </member>
        <member name="M:SadConsole.Components.DrawImage.#ctor(System.String)">
            <summary>
            Creates a new component with the specified image.
            </summary>
            <param name="filePath">Relative path to the image.</param>
        </member>
        <member name="M:SadConsole.Components.DrawImage.Finalize">
            <summary>
            Calls <see cref="M:SadConsole.Components.DrawImage.Dispose"/>.
            </summary>
        </member>
        <member name="M:SadConsole.Components.DrawImage.OnAdded(SadConsole.IScreenObject)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.Components.DrawImage.OnRemoved(SadConsole.IScreenObject)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.Components.DrawImage.Render(SadConsole.IScreenObject,System.TimeSpan)">
            <summary>
            Draws the image.
            </summary>
            <param name="host">The host of the component.</param>
            <param name="delta">Unused.</param>
        </member>
        <member name="M:SadConsole.Components.DrawImage.Dispose">
            <summary>
            Disposes the image.
            </summary>
        </member>
        <member name="T:SadConsole.Components.DrawImage.PositionModes">
            <summary>
            Indicates how positioning is intepreted.
            </summary>
        </member>
        <member name="F:SadConsole.Components.DrawImage.PositionModes.Pixels">
            <summary>
            Positions in pixels.
            </summary>
        </member>
        <member name="F:SadConsole.Components.DrawImage.PositionModes.Cells">
            <summary>
            Positions by the font of the host in cells.
            </summary>
        </member>
        <member name="T:SadConsole.Host.GameTexture">
            <summary>
            Create's a <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D"/>. Generally you request this from the <see cref="M:SadConsole.GameHost.GetTexture(System.String)"/> method.
            </summary>
        </member>
        <member name="P:SadConsole.Host.GameTexture.Texture">
            <inheritdoc />
        </member>
        <member name="P:SadConsole.Host.GameTexture.ResourcePath">
            <inheritdoc />
        </member>
        <member name="P:SadConsole.Host.GameTexture.Height">
            <inheritdoc />
        </member>
        <member name="P:SadConsole.Host.GameTexture.Width">
            <inheritdoc />
        </member>
        <member name="M:SadConsole.Host.GameTexture.#ctor(System.String)">
            <summary>
            Loads a <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D"/> from a file path.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:SadConsole.Host.GameTexture.#ctor(System.IO.Stream)">
            <summary>
            Loads a <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D"/> from a stream.
            </summary>
            <param name="stream">The stream containing the texture data.</param>
        </member>
        <member name="M:SadConsole.Host.GameTexture.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Wraps an existing texture. The texture must be manually disposed. You cannot dispose the texture through this object.
            </summary>
            <param name="texture"></param>
        </member>
        <member name="M:SadConsole.Host.GameTexture.Dispose">
            <summary>
            Disposes the underlaying texture object and releases reference to it.
            </summary>
        </member>
        <member name="M:SadConsole.Host.GameTexture.SetPixel(SadRogue.Primitives.Point,SadRogue.Primitives.Color)">
            <inheritdoc />
        </member>
        <member name="M:SadConsole.Host.GameTexture.SetPixel(System.Int32,SadRogue.Primitives.Color)">
            <inheritdoc />
        </member>
        <member name="M:SadConsole.Host.GameTexture.GetPixels">
            <inheritdoc />
        </member>
        <member name="M:SadConsole.Host.GameTexture.GetPixel(SadRogue.Primitives.Point)">
            <inheritdoc />
        </member>
        <member name="M:SadConsole.Host.GameTexture.GetPixel(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:SadConsole.Host.GameTexture.ToSurface(SadConsole.TextureConvertMode,System.Int32,System.Int32,SadConsole.TextureConvertBackgroundStyle,SadConsole.TextureConvertForegroundStyle,SadRogue.Primitives.Color[],SadConsole.ICellSurface)">
            <inheritdoc />
        </member>
        <member name="P:SadConsole.Game.UseTitleContainer">
            <summary>
            When <see langword="true"/>, forces the <see cref="M:SadConsole.Game.OpenStream(System.String,System.IO.FileMode,System.IO.FileAccess)"/> method to use <code>TitalContainer</code> when creating a stream to read a file.
            </summary>
        </member>
        <member name="P:SadConsole.Game.MonoGameInstance">
            <summary>
            The <see cref="T:Microsoft.Xna.Framework.Game"/> instance.
            </summary>
        </member>
        <member name="P:SadConsole.Game.Instance">
            <summary>
            Strongly typed version of <see cref="P:SadConsole.GameHost.Instance"/>.
            </summary>
        </member>
        <member name="M:SadConsole.Game.Create(System.Int32,System.Int32,System.String,System.Action{SadConsole.MonoGame.Game})">
            <summary>
            Creates a new game and assigns it to the <see cref="P:SadConsole.Game.MonoGameInstance"/> property.
            </summary>
            <param name="cellCountX"></param>
            <param name="cellCountY"></param>
            <param name="font"></param>
            <param name="monogameCtorCallback"></param>
        </member>
        <member name="M:SadConsole.Game.MonoGameInit(SadConsole.MonoGame.Game)">
            <summary>
            Method called by the <see cref="T:SadConsole.MonoGame.Game"/> class for initializing SadConsole specifics. Called prior to <see cref="M:SadConsole.MonoGame.Game.ResetRendering"/>.
            </summary>
            <param name="game">The game instance.</param>
        </member>
        <member name="M:SadConsole.Game.Run">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.Game.GetTexture(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.Game.GetTexture(System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.Game.GetKeyboardState">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.Game.GetMouseState">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.Game.OpenStream(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Opens a read-only stream with MonoGame.
            </summary>
            <param name="file">The file to open.</param>
            <param name="mode">Unused by monogame.</param>
            <param name="access">Unused by monogame.</param>
            <returns>The stream.</returns>
        </member>
        <member name="M:SadConsole.Game.ToggleFullScreen">
            <summary>
            Toggles between windowed and fullscreen rendering for SadConsole.
            </summary>
        </member>
        <member name="M:SadConsole.Game.ResizeWindow(System.Int32,System.Int32)">
            <summary>
            Resizes the game window.
            </summary>
            <param name="width">The width of the window in pixels.</param>
            <param name="height">The height of the window in pixels.</param>
        </member>
        <member name="T:SadConsole.MonoGame.Game">
            <summary>
            A MonoGame <see cref="T:Microsoft.Xna.Framework.Game"/> instance that runs SadConsole.
            </summary>
        </member>
        <member name="T:SadConsole.MonoGame.Game.FPSCounterComponent">
            <summary>
            A component to draw how many frames per second the engine is performing at.
            </summary>
        </member>
        <member name="P:SadConsole.MonoGame.Game.WindowWidth">
            <summary>
            The current game window width.
            </summary>
        </member>
        <member name="P:SadConsole.MonoGame.Game.WindowHeight">
            <summary>
            The current game window height.
            </summary>
        </member>
        <member name="E:SadConsole.MonoGame.Game.WindowResized">
            <summary>
            Raised when the window is resized and the render area has been calculated.
            </summary>
        </member>
        <member name="M:SadConsole.MonoGame.Game.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.MonoGame.Game.ResizeGraphicsDeviceManager(Microsoft.Xna.Framework.Point,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Resizes the <see cref="P:SadConsole.MonoGame.Global.GraphicsDeviceManager"/> by the specified font size.
            </summary>
            <param name="fontSize">The size of the font to base the final values on.</param>
            <param name="width">The width glyphs.</param>
            <param name="height">The height glyphs.</param>
            <param name="additionalWidth">Additional pixel width to add to the resize.</param>
            <param name="additionalHeight">Additional pixel height to add to the resize.</param>
        </member>
        <member name="M:SadConsole.MonoGame.Game.ResetRendering">
            <summary>
            Resets the <see cref="P:SadConsole.MonoGame.Global.RenderOutput"/> target and determines the appropriate <see cref="P:SadConsole.Settings.Rendering.RenderRect"/> and <see cref="P:SadConsole.Settings.Rendering.RenderScale"/> based on the window or fullscreen state.
            </summary>
        </member>
        <member name="P:SadConsole.MonoGame.Settings.UseHardwareFullScreen">
            <summary>
            Tells MonoGame to use a full screen resolution change instead of soft (quick) full screen. Must be set before the game is created.
            </summary>
        </member>
        <member name="T:SadConsole.Readers.TextureToSurfaceReader">
            <summary>
            Reads a texture to a cached surface. Used for animation.
            </summary>
        </member>
        <member name="P:SadConsole.Readers.TextureToSurfaceReader.UseBlockMode">
            <summary>
            Renders the cells as blocks instead of characters.
            </summary>
        </member>
        <member name="M:SadConsole.Readers.TextureToSurfaceReader.#ctor(System.Int32,System.Int32,SadConsole.Font,SadRogue.Primitives.Point)">
            <summary>
            Creates a new instance of the class.
            </summary>
            <param name="pixelWidth">Width the source texture.</param>
            <param name="pixelHeight">Height of the source texture.</param>
            <param name="font">Font used for rendering.</param>
        </member>
        <member name="M:SadConsole.Readers.TextureToSurfaceReader.GetSurface(Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Returns a surface with the specified image rendered to it as characters.
            </summary>
            <param name="image">The image to render.</param>
            <returns>The surface.</returns>
        </member>
        <member name="T:SadConsole.Renderers.ControlsConsole">
             <summary>
             Draws a <see cref="T:SadConsole.Renderers.ControlsConsole"/>.
             </summary>
             <remarks>
             This renderer only caches drawing of the surface's cells. When the <see cref="M:SadConsole.Renderers.ControlsConsole.Render(SadConsole.IScreenSurface)"/> method is called, the cached surface is drawn, then the cursor (if required), and then a tint. This allows the cursor to move and animate on the surface without the entire surface being redrawn each frame.
            
             If the cursor is not visible, and there is not tint set, this renderer behaves exactly like <see cref="T:SadConsole.Renderers.ScreenSurfaceRenderer"/>.
             </remarks>
        </member>
        <member name="F:SadConsole.Renderers.ControlsConsole.BackingTextureControls">
            <summary>
            The cached texture of the drawn controls layer.
            </summary>
        </member>
        <member name="P:SadConsole.Renderers.ControlsConsole.Name">
            <summary>
            Name of this renderer type.
            </summary>
        </member>
        <member name="M:SadConsole.Renderers.ControlsConsole.Attach(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ControlsConsole.Detatch(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ControlsConsole.Render(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ControlsConsole.Refresh(SadConsole.IScreenSurface,System.Boolean)">
             <inheritdoc/>
        </member>
        <member name="T:SadConsole.Renderers.LayeredScreenSurface">
            <summary>
            Draws a <see cref="T:SadConsole.LayeredScreenSurface"/>.
            </summary>
            <remarks>
            This renderer caches the entire drawing of the surface's cells, including the tint of the object.
            </remarks>
        </member>
        <member name="P:SadConsole.Renderers.LayeredScreenSurface.Name">
            <summary>
            Name of this renderer type.
            </summary>
        </member>
        <member name="M:SadConsole.Renderers.LayeredScreenSurface.Attach(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.LayeredScreenSurface.Render(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.LayeredScreenSurface.Refresh(SadConsole.IScreenSurface,System.Boolean)">
             <inheritdoc/>
        </member>
        <member name="T:SadConsole.Renderers.ScreenSurfaceRenderer">
            <summary>
            Draws a <see cref="T:SadConsole.IScreenSurface"/>.
            </summary>
            <remarks>
            This renderer caches the entire drawing of the surface's cells, including the tint of the object.
            </remarks>
        </member>
        <member name="P:SadConsole.Renderers.ScreenSurfaceRenderer.Name">
            <summary>
            Name of this renderer type.
            </summary>
        </member>
        <member name="M:SadConsole.Renderers.ScreenSurfaceRenderer.Attach(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ScreenSurfaceRenderer.Detatch(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ScreenSurfaceRenderer.Render(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ScreenSurfaceRenderer.Refresh(SadConsole.IScreenSurface,System.Boolean)">
             <inheritdoc/>
        </member>
        <member name="T:SadConsole.Renderers.Window">
             <summary>
             Draws a <see cref="T:SadConsole.Renderers.Window"/>.
             </summary>
             <remarks>
             This renderer only caches drawing of the surface's cells. When the <see cref="M:SadConsole.Renderers.Window.Render(SadConsole.IScreenSurface)"/> method is called, the cached surface is drawn, then the cursor (if required), and then a tint. This allows the cursor to move and animate on the surface without the entire surface being redrawn each frame.
            
             If the cursor is not visible, and there is not tint set, this renderer behaves exactly like <see cref="T:SadConsole.Renderers.ScreenSurfaceRenderer"/>.
             </remarks>
        </member>
        <member name="P:SadConsole.Renderers.Window.Name">
            <summary>
            Name of this renderer type.
            </summary>
        </member>
        <member name="M:SadConsole.Renderers.Window.Attach(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.Window.Render(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
    </members>
</doc>
