<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SadConsole.Host.SFML</name>
    </assembly>
    <members>
        <member name="T:SadConsole.Components.DrawImage">
            <summary>
            Draws an image on top of a console.
            </summary>
        </member>
        <member name="P:SadConsole.Components.DrawImage.PositionMode">
            <summary>
            Sets or gets how the <see cref="P:SadConsole.Components.DrawImage.PositionOffset"/> property is interpreted.
            </summary>
        </member>
        <member name="P:SadConsole.Components.DrawImage.PositionOffset">
            <summary>
            The positioning offset.
            </summary>
            <remarks>
            The position the image is displayed is based on the hosting console's position. This property adjusts the position of the image by the specified amount.
            </remarks>
        </member>
        <member name="M:SadConsole.Components.DrawImage.#ctor(System.String)">
            <summary>
            Creates a new component with the specified image.
            </summary>
            <param name="filePath">Relative path to the image.</param>
        </member>
        <member name="M:SadConsole.Components.DrawImage.Finalize">
            <summary>
            Calls <see cref="M:SadConsole.Components.DrawImage.Dispose"/>.
            </summary>
        </member>
        <member name="M:SadConsole.Components.DrawImage.OnAdded(SadConsole.IScreenObject)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.Components.DrawImage.OnRemoved(SadConsole.IScreenObject)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.Components.DrawImage.Render(SadConsole.IScreenObject,System.TimeSpan)">
            <summary>
            Draws the image.
            </summary>
            <param name="host">The host of the component.</param>
            <param name="delta">Unused.</param>
        </member>
        <member name="M:SadConsole.Components.DrawImage.Dispose">
            <summary>
            Disposes the image.
            </summary>
        </member>
        <member name="T:SadConsole.Components.DrawImage.PositionModes">
            <summary>
            Indicates how positioning is intepreted.
            </summary>
        </member>
        <member name="F:SadConsole.Components.DrawImage.PositionModes.Pixels">
            <summary>
            Positions in pixels.
            </summary>
        </member>
        <member name="F:SadConsole.Components.DrawImage.PositionModes.Cells">
            <summary>
            Positions by the font of the host in cells.
            </summary>
        </member>
        <member name="T:SadConsole.Host.GameTexture">
            <summary>
            Wraps a <see cref="T:SFML.Graphics.Texture"/> object in a way that SadConsole can interact with it.
            </summary>
        </member>
        <member name="P:SadConsole.Host.GameTexture.Texture">
            <inheritdoc />
        </member>
        <member name="P:SadConsole.Host.GameTexture.ResourcePath">
            <inheritdoc />
        </member>
        <member name="P:SadConsole.Host.GameTexture.Height">
            <inheritdoc />
        </member>
        <member name="P:SadConsole.Host.GameTexture.Width">
            <inheritdoc />
        </member>
        <member name="M:SadConsole.Host.GameTexture.#ctor(SFML.Graphics.Texture)">
            <summary>
            Wraps a texture. Doesn't dispose it when this object is disposed!
            </summary>
            <param name="texture">The texture to wrap</param>
            <remarks>The only time the backing texture resource is disposed is when the <see cref="T:SadConsole.Host.GameTexture"/> object is created through <see cref="T:SadConsole.GameHost.GetTexture*"/>.</remarks>
        </member>
        <member name="M:SadConsole.Host.GameTexture.Dispose">
            <summary>
            Disposes the underlaying texture object and releases reference to it.
            </summary>
        </member>
        <member name="M:SadConsole.Host.GameTexture.SetPixel(SadRogue.Primitives.Point,SadRogue.Primitives.Color)">
            <inheritdoc />
        </member>
        <member name="M:SadConsole.Host.GameTexture.SetPixel(System.Int32,SadRogue.Primitives.Color)">
            <inheritdoc />
        </member>
        <member name="M:SadConsole.Host.GameTexture.GetPixels">
            <inheritdoc />
        </member>
        <member name="M:SadConsole.Host.GameTexture.GetPixel(SadRogue.Primitives.Point)">
            <inheritdoc />
        </member>
        <member name="M:SadConsole.Host.GameTexture.GetPixel(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:SadConsole.Host.GameTexture.ToSurface(SadConsole.TextureConvertMode,System.Int32,System.Int32,SadConsole.TextureConvertBackgroundStyle,SadConsole.TextureConvertForegroundStyle,SadRogue.Primitives.Color[],SadConsole.ICellSurface)">
            <inheritdoc />
        </member>
        <member name="P:SadConsole.Host.Settings.UseHardwareFullScreen">
            <summary>
            Tells MonoGame to use a full screen resolution change instead of soft (quick) full screen. Must be set before the game is created.
            </summary>
        </member>
        <member name="P:SadConsole.Host.Settings.FPS">
            <summary>
            The target frames per second for the game window. Set before calling <see cref="!:SadConsole.Game.Create(int, int, string)"/>.
            </summary>
        </member>
        <member name="P:SadConsole.Host.Settings.WindowTitle">
            <summary>
            The game window title. Set before calling <see cref="!:SadConsole.Game.Create(int, int, string)"/>.
            </summary>
        </member>
        <member name="P:SadConsole.Host.Settings.SFMLSurfaceBlendMode">
            <summary>
            The blend state used with <see cref="T:SadConsole.Renderers.IRenderer"/> on surfaces.
            </summary>
        </member>
        <member name="P:SadConsole.Host.Settings.SFMLScreenBlendMode">
            <summary>
            The blend state used when drawing surfaces to the final texture and screen.
            </summary>
        </member>
        <member name="P:SadConsole.Host.Settings.SFMLScreenShader">
            <summary>
            A shader used when drawing the final texture to the screen.
            </summary>
        </member>
        <member name="T:SadConsole.Game">
            <summary>
            The SadConsole game object.
            </summary>
        </member>
        <member name="P:SadConsole.Game.Instance">
            <summary>
            Static instance to the game after the <see cref="M:SadConsole.Game.Create(System.Int32,System.Int32,System.String,SFML.Graphics.RenderWindow)"/> method has been called.
            </summary>
        </member>
        <member name="M:SadConsole.Game.Create(System.Int32,System.Int32,System.String,SFML.Graphics.RenderWindow)">
            <summary>
            Create's a new SadConsole game.
            </summary>
            <param name="cellCountX">How many cells wide the window should be based on the font used.</param>
            <param name="cellCountY">How many cells high the window should be based on the font used.</param>
            <param name="font">An optional font; otherwise a default 8x16 IBM font is used.</param>
            <param name="window">A optional window object; otherwise the window is created for you.</param>
        </member>
        <member name="M:SadConsole.Game.Run">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.Game.GetTexture(System.String)">
            <inheritdoc/> 
        </member>
        <member name="M:SadConsole.Game.GetTexture(System.IO.Stream)">
            <inheritdoc/> 
        </member>
        <member name="M:SadConsole.Game.GetKeyboardState">
            <inheritdoc/> 
        </member>
        <member name="M:SadConsole.Game.GetMouseState">
            <inheritdoc/> 
        </member>
        <member name="M:SadConsole.Game.OpenStream(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Opens a read-only stream with MonoGame.
            </summary>
            <param name="file">The file to open.</param>
            <param name="mode">File open or create mode.</param>
            <param name="access">Read or write access.</param>
            <returns>The stream.</returns>
        </member>
        <member name="M:SadConsole.Game.ToggleFullScreen">
            <summary>
            Toggles between windowed and fullscreen rendering for SadConsole.
            </summary>
        </member>
        <member name="M:SadConsole.Game.ResizeWindow(System.Int32,System.Int32)">
            <summary>
            Resizes the game window.
            </summary>
            <param name="width">The width of the window in pixels.</param>
            <param name="height">The height of the window in pixels.</param>
        </member>
        <member name="M:SadConsole.Game.ResetRendering">
            <summary>
            Resets the <see cref="P:SadConsole.Host.Global.RenderOutput"/> target and determines the appropriate <see cref="P:SadConsole.Settings.Rendering.RenderRect"/> and <see cref="P:SadConsole.Settings.Rendering.RenderScale"/> based on the window or fullscreen state.
            </summary>
        </member>
        <member name="T:SadConsole.Renderers.ControlsConsole">
             <summary>
             Draws a <see cref="T:SadConsole.Renderers.ControlsConsole"/>.
             </summary>
             <remarks>
             This renderer only caches drawing of the surface's cells. When the <see cref="M:SadConsole.Renderers.ControlsConsole.Render(SadConsole.IScreenSurface)"/> method is called, the cached surface is drawn, then the cursor (if required), and then a tint. This allows the cursor to move and animate on the surface without the entire surface being redrawn each frame.
            
             If the cursor is not visible, and there is not tint set, this renderer behaves exactly like <see cref="T:SadConsole.Renderers.ScreenSurfaceRenderer"/>.
             </remarks>
        </member>
        <member name="F:SadConsole.Renderers.ControlsConsole.BackingTextureControls">
            <summary>
            The cached texture of the drawn controls layer.
            </summary>
        </member>
        <member name="P:SadConsole.Renderers.ControlsConsole.Name">
            <summary>
            Name of this renderer type.
            </summary>
        </member>
        <member name="M:SadConsole.Renderers.ControlsConsole.Attach(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ControlsConsole.Detatch(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ControlsConsole.Render(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ControlsConsole.Refresh(SadConsole.IScreenSurface,System.Boolean)">
             <inheritdoc/>
        </member>
        <member name="T:SadConsole.Renderers.LayeredScreenSurface">
            <summary>
            Draws a <see cref="T:SadConsole.LayeredScreenSurface"/>.
            </summary>
            <remarks>
            This renderer caches the entire drawing of the surface's cells, including the tint of the object.
            </remarks>
        </member>
        <member name="P:SadConsole.Renderers.LayeredScreenSurface.Name">
            <summary>
            Name of this renderer type.
            </summary>
        </member>
        <member name="M:SadConsole.Renderers.LayeredScreenSurface.Attach(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.LayeredScreenSurface.Render(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.LayeredScreenSurface.Refresh(SadConsole.IScreenSurface,System.Boolean)">
             <inheritdoc/>
        </member>
        <member name="T:SadConsole.Renderers.ScreenSurfaceRenderer">
            <summary>
            Draws a <see cref="T:SadConsole.IScreenSurface"/>.
            </summary>
            <remarks>
            This renderer caches the entire drawing of the surface's cells, including the tint of the object.
            </remarks>
        </member>
        <member name="F:SadConsole.Renderers.ScreenSurfaceRenderer._finalDrawColor">
            <summary>
            Color used with drawing the texture to the screen. Let's a surface become transparent.
            </summary>
        </member>
        <member name="P:SadConsole.Renderers.ScreenSurfaceRenderer.SFMLBlendState">
            <summary>
            The blend state used by this renderer.
            </summary>
        </member>
        <member name="P:SadConsole.Renderers.ScreenSurfaceRenderer.Name">
            <summary>
            Name of this renderer type.
            </summary>
        </member>
        <member name="P:SadConsole.Renderers.ScreenSurfaceRenderer.Opacity">
            <summary>
            A 0 to 255 value represening how transparent the <see cref="F:SadConsole.Renderers.ScreenSurfaceRenderer.BackingTexture"/> is when drawn to the screen. 255 represents full visibility.
            </summary>
        </member>
        <member name="F:SadConsole.Renderers.ScreenSurfaceRenderer.BackingTexture">
            <summary>
            The texture the surface is drawn to.
            </summary>
        </member>
        <member name="F:SadConsole.Renderers.ScreenSurfaceRenderer._renderRects">
            <summary>
            Cached set of rectangles used in rendering each cell.
            </summary>
        </member>
        <member name="M:SadConsole.Renderers.ScreenSurfaceRenderer.Attach(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ScreenSurfaceRenderer.Detatch(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ScreenSurfaceRenderer.Render(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ScreenSurfaceRenderer.Refresh(SadConsole.IScreenSurface,System.Boolean)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.ScreenSurfaceRenderer.RefreshBegin(SadConsole.IScreenSurface)">
            <summary>
            Starts the sprite batch with the <see cref="F:SadConsole.Renderers.ScreenSurfaceRenderer.BackingTexture"/>.
            </summary>
            <param name="surface">Object being used with the sprite batch.</param>
        </member>
        <member name="M:SadConsole.Renderers.ScreenSurfaceRenderer.RefreshEnd(SadConsole.IScreenSurface)">
            <summary>
            Ends the sprite batch.
            </summary>
            <param name="surface">Object being used with the sprite batch.</param>
        </member>
        <member name="M:SadConsole.Renderers.ScreenSurfaceRenderer.RefreshCells(SadConsole.ICellSurface,SadConsole.Font)">
            <summary>
            Draws each cell with the sprite batch.
            </summary>
            <param name="surface">The surface being drawn.</param>
            <param name="font">The font used with drawing.</param>
        </member>
        <member name="T:SadConsole.Renderers.Window">
             <summary>
             Draws a <see cref="T:SadConsole.Renderers.Window"/>.
             </summary>
             <remarks>
             This renderer only caches drawing of the surface's cells. When the <see cref="M:SadConsole.Renderers.Window.Render(SadConsole.IScreenSurface)"/> method is called, the cached surface is drawn, then the cursor (if required), and then a tint. This allows the cursor to move and animate on the surface without the entire surface being redrawn each frame.
            
             If the cursor is not visible, and there is not tint set, this renderer behaves exactly like <see cref="T:SadConsole.Renderers.ScreenSurfaceRenderer"/>.
             </remarks>
        </member>
        <member name="P:SadConsole.Renderers.Window.Name">
            <summary>
            Name of this renderer type.
            </summary>
        </member>
        <member name="M:SadConsole.Renderers.Window.Attach(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
        <member name="M:SadConsole.Renderers.Window.Render(SadConsole.IScreenSurface)">
             <inheritdoc/>
        </member>
    </members>
</doc>
